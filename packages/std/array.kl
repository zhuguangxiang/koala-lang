
pub class Array<T> : ToString {
    var ptr Pointer<T>
    var offset uint32
    var len uint32
    var cap uint32

    pub func __add__(o Array<T>) Array<T> {
        for i in o { append(i) }
        return self
    }

    pub func append(e T) Array<T> {
        if len >= cap {
            ptr := allocPointer<T>(cap * 2)
            memcpy(ptr, self.ptr, len * ptr.elemSize())
            self.ptr = ptr
            cap = cap * 2
        }
        return self
    }

    public func sort(cmp func(T, T) i8) {
        qsort(ptr, sizeof(T), len, cmp)
    }
}


arr := [String]
arr := [Pointer<String>]
